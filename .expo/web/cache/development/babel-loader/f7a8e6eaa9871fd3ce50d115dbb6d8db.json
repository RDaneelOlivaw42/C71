{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/drpoojayadav/Downloads/C71/AutoPopulateTextInput/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              transactionMessage = null;\n              db.collection(\"books\").doc(_this.state.scannedBookId).get().then(function (doc) {\n                console.log(doc.data());\n                var book = doc.data();\n\n                if (book.bookAvailability) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"Book Issued\";\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"Book Returned\";\n                }\n              });\n\n              _this.setState({\n                transactionMessage: transactionMessage\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee4() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return _regeneratorRuntime.awrap(_this2.handleTransaction());\n\n                  case 2:\n                    transactionMessage = _context4.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#fbc02d',\n    width: 100,\n    height: 50,\n    justifyContent: \"center\"\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/drpoojayadav/Downloads/C71/AutoPopulateTextInput/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","handleTransaction","transactionMessage","collection","doc","get","then","console","log","book","bookAvailability","initiateBookIssue","initiateBookReturn","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport db from \"../config\";\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage: '',\n      }\n    };\n\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    };\n\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    };\n\n    handleTransaction = async()=>{\n      var transactionMessage = null;\n\n      db.collection(\"books\").doc(this.state.scannedBookId).get()\n      .then((doc)=>{\n        console.log(doc.data());\n        var book = doc.data();\n\n        if(book.bookAvailability){\n          this.initiateBookIssue();\n          transactionMessage = \"Book Issued\";\n        }\n        else{\n          this.initiateBookReturn();\n          transactionMessage = \"Book Returned\";\n        }\n      });\n      \n      this.setState({\n        transactionMessage: transactionMessage\n      });\n\n    };\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <View style={styles.container}>\n\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n\n            <View style={styles.inputView}>\n              <TextInput \n                style={styles.inputBox}\n                placeholder=\"Book Id\"\n                value={this.state.scannedBookId}/>\n              <TouchableOpacity \n                style={styles.scanButton}\n                onPress={()=>{\n                  this.getCameraPermissions(\"BookId\")\n              }}>\n                <Text style={styles.buttonText}>Scan</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n              <TextInput \n                style={styles.inputBox}\n                placeholder=\"Student Id\"\n                value={this.state.scannedStudentId}/>\n              <TouchableOpacity \n                style={styles.scanButton}\n                onPress={()=>{\n                  this.getCameraPermissions(\"StudentId\")\n                }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <TouchableOpacity \n              style = {styles.submitButton}\n              onPress = {async ()=>{\n                var transactionMessage = await this.handleTransaction();\n              }}>\n                <Text style = {styles.submitButtonText}>Submit</Text>\n              </TouchableOpacity>\n\n          </View>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n\n    submitButton: {\n      backgroundColor: '#fbc02d',\n      width: 100,\n      height: 50,\n      justifyContent: \"center\"\n    },\n\n    submitButtonText: {\n      padding: 10,\n      textAlign: 'center',\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n\n  });"]},"metadata":{},"sourceType":"module"}